var __extends=this&&this.__extends||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)};var Myna;(function(Myna){var Parser=function(){function Parser(input,index,nodes){this.input=input;this.index=index;this.nodes=nodes}Parser.prototype.clone=function(){return new Parser(this.input,this.index,this.nodes.slice())};Object.defineProperty(Parser.prototype,"inRange",{get:function(){return this.index>=0&&this.index<this.input.length},enumerable:true,configurable:true});Parser.prototype.copyFrom=function(p){this.input=p.input;this.index=p.index;this.nodes=p.nodes};Object.defineProperty(Parser.prototype,"location",{get:function(){return this.index.toString()},enumerable:true,configurable:true});Object.defineProperty(Parser.prototype,"debugContext",{get:function(){var contextWidth=5;var start=this.index-contextWidth-1;if(start<0)start=0;var prefix=this.input.slice(start,this.index-1);var end=this.index+contextWidth;if(end>=this.input.length)end=this.input.length-1;var postfix=this.input.slice(this.index,end);return prefix+" >>> "+this.input[this.index]+" <<< "+postfix},enumerable:true,configurable:true});return Parser}();Myna.Parser=Parser;function match(r,s){return r.match(new Parser(s,0,[]))}Myna.match=match;function parse(r,s){var p=new Parser(s,0,[]);r.ast.parse(p);if(!p.nodes||!p.nodes.length)return undefined;if(p.nodes.length>1)throw new Error("parse is returning more than one node");return p.nodes[0]}Myna.parse=parse;function tokenize(r,s){var result=this.parse(r.ast.zeroOrMore,s);return result?result.children:[]}Myna.tokenize=tokenize;Myna.grammars={};Myna.allRules={};var _nextId=0;function genId(){return _nextId++}var failed=-1;function RuleTypeToRule(rule){if(rule instanceof Rule)return rule;if(typeof rule==="string")return text(rule);if(typeof rule==="boolean")return rule?Myna.truePredicate:Myna.falsePredicate;throw new Error("Invalid rule type: "+rule)}Myna.RuleTypeToRule=RuleTypeToRule;var AstNode=function(){function AstNode(rule,input,start,end){if(start===void 0){start=0}if(end===void 0){end=failed}this.rule=rule;this.input=input;this.start=start;this.end=end;this.children=null}Object.defineProperty(AstNode.prototype,"name",{get:function(){return this.rule!=null?this.rule.name:"unnamed"},enumerable:true,configurable:true});Object.defineProperty(AstNode.prototype,"fullName",{get:function(){return this.rule!=null?this.rule.fullName:"unnamed"},enumerable:true,configurable:true});Object.defineProperty(AstNode.prototype,"allText",{get:function(){return this.input.slice(this.start,this.end)},enumerable:true,configurable:true});Object.defineProperty(AstNode.prototype,"isLeaf",{get:function(){return this.children==null||this.children.length==0},enumerable:true,configurable:true});AstNode.prototype.child=function(name){if(this.children)for(var _i=0,_a=this.children;_i<_a.length;_i++){var c=_a[_i];if(c.name==name)return c}return null};Object.defineProperty(AstNode.prototype,"_firstChildStart",{get:function(){return this.isLeaf?this.end:this.children[0].start},enumerable:true,configurable:true});Object.defineProperty(AstNode.prototype,"_lastChildEnd",{get:function(){return this.isLeaf?this.end:this.children[0].end},enumerable:true,configurable:true});Object.defineProperty(AstNode.prototype,"beforeChildrenText",{get:function(){return this.input.slice(this.start,this._firstChildStart)},enumerable:true,configurable:true});Object.defineProperty(AstNode.prototype,"afterChildrenText",{get:function(){return this.input.slice(this._lastChildEnd,this.end)},enumerable:true,configurable:true});Object.defineProperty(AstNode.prototype,"allChildrenText",{get:function(){return this.input.slice(this._firstChildStart,this._lastChildEnd)},enumerable:true,configurable:true});return AstNode}();Myna.AstNode=AstNode;var Rule=function(){function Rule(rules){this.rules=rules;this.name="";this.grammarName="";this.id=genId();this.type="";this._createAstNode=false}Rule.prototype.parseImplementation=function(p){throw new Error("Missing override for parseImplementation")};Rule.prototype.match=function(p){var oldP=p.clone();var result=this.parseImplementation(p);if(result==failed)p.index=oldP.index;p.nodes=oldP.nodes;return result!=failed};Rule.prototype.parse=function(p){var oldP=p.clone();if(!this._createAstNode){var result=this.parseImplementation(p);if(result!==failed)p.index=result;else p.copyFrom(oldP);return result}else{var node=new AstNode(this,p.input,p.index);p.nodes=[];var result=this.parseImplementation(p);if(result!==failed){node.children=p.nodes;p.nodes=oldP.nodes;p.nodes.push(node);node.end=result;p.index=result}else{p.copyFrom(oldP)}return result}};Rule.prototype.setType=function(typeName){this.type=typeName;return this};Rule.prototype.setName=function(grammarName,ruleName){this.grammarName=grammarName;this.name=ruleName;return this};Object.defineProperty(Rule.prototype,"definition",{get:function(){return this.type+"("+this.rules.map(function(r){return r.toString()}).join(", ")+")"},enumerable:true,configurable:true});Object.defineProperty(Rule.prototype,"fullName",{get:function(){return this.grammarName+"."+this.name},enumerable:true,configurable:true});Object.defineProperty(Rule.prototype,"nameOrDefinition",{get:function(){return this.name?this.fullName:this.definition},enumerable:true,configurable:true});Rule.prototype.toString=function(){return this.nameOrDefinition};Object.defineProperty(Rule.prototype,"firstChild",{get:function(){return this.rules[0]},enumerable:true,configurable:true});Rule.prototype.cloneImplementation=function(){throw new Error("Missing override for cloneImplementation")};Object.defineProperty(Rule.prototype,"copy",{get:function(){var r=this.cloneImplementation();if(typeof r!==typeof this)throw new Error("Error in implementation of cloneImplementation: not returning object of correct type");r.name=this.name;r.grammarName=this.grammarName;r.type=this.type;r._createAstNode=this._createAstNode;return r},enumerable:true,configurable:true});Object.defineProperty(Rule.prototype,"ast",{get:function(){var r=this.copy;r._createAstNode=true;return r},enumerable:true,configurable:true});Object.defineProperty(Rule.prototype,"hasAstChildRule",{get:function(){return this.rules.filter(function(r){return r.isAstRule}).length>0},enumerable:true,configurable:true});Object.defineProperty(Rule.prototype,"isAstRule",{get:function(){return this._createAstNode||this.hasAstChildRule&&(this instanceof Sequence||this instanceof Choice||this instanceof Quantified)},enumerable:true,configurable:true});Object.defineProperty(Rule.prototype,"astRuleDefn",{get:function(){var rules=this.rules.filter(function(r){return r.isAstRule});if(!rules.length)return this.name;if(rules.length==1){var result=rules[0].astRuleNameOrDefn;if(this instanceof Quantified)result+="["+this.min+","+this.max+"]";return result}if(this instanceof Sequence)return"seq("+rules.map(function(r){return r.astRuleNameOrDefn}).join(",")+")";if(this instanceof Choice)return"choice("+rules.map(function(r){return r.astRuleNameOrDefn}).join(",")+")";throw new Error("Internal error: not a valid AST rule")},enumerable:true,configurable:true});Object.defineProperty(Rule.prototype,"astRuleNameOrDefn",{get:function(){if(this._createAstNode)return this.name;return this.astRuleDefn},enumerable:true,configurable:true});Object.defineProperty(Rule.prototype,"opt",{get:function(){return opt(this)},enumerable:true,configurable:true});Object.defineProperty(Rule.prototype,"zeroOrMore",{get:function(){return zeroOrMore(this)},enumerable:true,configurable:true});Object.defineProperty(Rule.prototype,"oneOrMore",{get:function(){return oneOrMore(this)},enumerable:true,configurable:true});Object.defineProperty(Rule.prototype,"not",{get:function(){return not(this)},enumerable:true,configurable:true});Object.defineProperty(Rule.prototype,"advance",{get:function(){return this.then(Myna.advance)},enumerable:true,configurable:true});Object.defineProperty(Rule.prototype,"ws",{get:function(){return this.then(Myna.ws)},enumerable:true,configurable:true});Object.defineProperty(Rule.prototype,"all",{get:function(){return this.then(Myna.all)},enumerable:true,configurable:true});Object.defineProperty(Rule.prototype,"end",{get:function(){return this.then(Myna.end)},enumerable:true,configurable:true});Object.defineProperty(Rule.prototype,"assert",{get:function(){return assert(this)},enumerable:true,configurable:true});Rule.prototype.then=function(r){return seq(this,r)};Rule.prototype.thenAt=function(r){return this.then(at(r))};Rule.prototype.thenNot=function(r){return this.then(not(r))};Rule.prototype.or=function(r){return choice(this,r)};Rule.prototype.until=function(r){return repeatWhileNot(this,r)};Rule.prototype.untilPast=function(r){return repeatUntilPast(this,r)};Rule.prototype.repeat=function(count){return repeat(this,count)};Rule.prototype.quantified=function(min,max){return quantified(this,min,max)};Rule.prototype.delimited=function(delimiter){return delimited(this,delimiter)};Rule.prototype.butNot=function(r){return not(r).then(this)};return Rule}();Myna.Rule=Rule;var Sequence=function(_super){__extends(Sequence,_super);function Sequence(rules){_super.call(this,rules);this.type="seq"}Sequence.prototype.parseImplementation=function(p){for(var _i=0,_a=this.rules;_i<_a.length;_i++){var r=_a[_i];if(r.parse(p)==failed)return failed}return p.index};Object.defineProperty(Sequence.prototype,"definition",{get:function(){var result=this.rules.map(function(r){return r.toString()}).join(" ");if(this.rules.length>1)result="("+result+")";return result},enumerable:true,configurable:true});Sequence.prototype.cloneImplementation=function(){return new Sequence(this.rules)};return Sequence}(Rule);Myna.Sequence=Sequence;var Choice=function(_super){__extends(Choice,_super);function Choice(rules){_super.call(this,rules);this.type="choice"}Choice.prototype.parseImplementation=function(p){for(var _i=0,_a=this.rules;_i<_a.length;_i++){var r=_a[_i];var result=r.parse(p);if(result!==failed)return result}return failed};Object.defineProperty(Choice.prototype,"definition",{get:function(){var result=this.rules.map(function(r){return r.toString()}).join(" / ");if(this.rules.length>1)result="("+result+")";return result},enumerable:true,configurable:true});Choice.prototype.cloneImplementation=function(){return new Choice(this.rules)};return Choice}(Rule);Myna.Choice=Choice;var Quantified=function(_super){__extends(Quantified,_super);function Quantified(rule,min,max){if(min===void 0){min=0}if(max===void 0){max=Infinity}_super.call(this,[rule]);this.min=min;this.max=max;this.type="quantified"}Quantified.prototype.parseImplementation=function(p){var result=p.index;for(var i=0;i<this.max;++i){var tmp=this.firstChild.parse(p);if(tmp===failed)return i>=this.min?result:failed;if(this.max==Infinity)if(result===tmp)throw new Error("Infinite loop: unbounded quanitifed rule is not making progress");result=tmp}return result};Object.defineProperty(Quantified.prototype,"definition",{get:function(){if(this.min==0&&this.max==1)return this.firstChild.toString()+"?";if(this.min==0&&this.max==Infinity)return this.firstChild.toString()+"*";if(this.min==1&&this.max==Infinity)return this.firstChild.toString()+"+";return this.firstChild.toString()+"{"+this.min+","+this.max+"}"},enumerable:true,configurable:true});Quantified.prototype.cloneImplementation=function(){return new Quantified(this.firstChild,this.min,this.max)};return Quantified}(Rule);Myna.Quantified=Quantified;var Advance=function(_super){__extends(Advance,_super);function Advance(){_super.call(this,[]);this.type="advance"}Advance.prototype.parseImplementation=function(p){return p.inRange?p.index+1:failed};Object.defineProperty(Advance.prototype,"definition",{get:function(){return"<advance>"},enumerable:true,configurable:true});Advance.prototype.cloneImplementation=function(){return new Advance};return Advance}(Rule);Myna.Advance=Advance;var Lookup=function(_super){__extends(Lookup,_super);function Lookup(lookup,onDefault){_super.call(this,[]);this.lookup=lookup;this.onDefault=onDefault;this.type="lookup"}Lookup.prototype.parseImplementation=function(p){if(!p.inRange)return failed;var tkn=p.input[p.index];var r=this.lookup[tkn];if(r!==undefined)return r.parse(p);return this.onDefault.parse(p)};Object.defineProperty(Lookup.prototype,"definition",{get:function(){var _this=this;return"{"+Object.keys(this.lookup).map(function(k){return'"'+escapeChars(k)+'" :'+_this.lookup[k].toString()}).join(",")+"}"},enumerable:true,configurable:true});Lookup.prototype.cloneImplementation=function(){return new Lookup(this.lookup,this.onDefault)};return Lookup}(Rule);Myna.Lookup=Lookup;function tokensToDictionary(tokens,rule){var d={};for(var _i=0,tokens_1=tokens;_i<tokens_1.length;_i++){var t=tokens_1[_i];d[t]=RuleTypeToRule(rule)}return d}Myna.tokensToDictionary=tokensToDictionary;var CharSet=function(_super){__extends(CharSet,_super);function CharSet(chars){_super.call(this,tokensToDictionary(chars.split(""),Myna.advance),Myna.falsePredicate);this.chars=chars;this.type="charSet"}Object.defineProperty(CharSet.prototype,"definition",{get:function(){return"["+escapeChars(this.chars)+"]"},enumerable:true,configurable:true});CharSet.prototype.cloneImplementation=function(){return new CharSet(this.chars)};return CharSet}(Lookup);Myna.CharSet=CharSet;var NegatedCharSet=function(_super){__extends(NegatedCharSet,_super);function NegatedCharSet(chars){_super.call(this,tokensToDictionary(chars.split(""),Myna.falsePredicate),Myna.truePredicate);this.chars=chars;this.type="negatedCharSet"}Object.defineProperty(NegatedCharSet.prototype,"definition",{get:function(){return"[^"+escapeChars(this.chars)+"]"},enumerable:true,configurable:true});NegatedCharSet.prototype.cloneImplementation=function(){return new NegatedCharSet(this.chars)};return NegatedCharSet}(Lookup);Myna.NegatedCharSet=NegatedCharSet;function rangeToDictionary(min,max,rule){if(min.length!=1||max.length!=1)throw new Error("rangeToDictionary requires characters as inputs");var minChar=min.charCodeAt(0);var maxChar=max.charCodeAt(0);var d={};for(var x=minChar;x<=maxChar;++x)d[String.fromCharCode(x)]=rule;return d}Myna.rangeToDictionary=rangeToDictionary;var CharRange=function(_super){__extends(CharRange,_super);function CharRange(min,max){_super.call(this,rangeToDictionary(min,max,Myna.advance),Myna.falsePredicate);this.min=min;this.max=max;this.type="charRange"}Object.defineProperty(CharRange.prototype,"definition",{get:function(){return"["+this.min+".."+this.max+"]"},enumerable:true,configurable:true});CharRange.prototype.cloneImplementation=function(){return new CharRange(this.min,this.max)};return CharRange}(Lookup);Myna.CharRange=CharRange;var Text=function(_super){__extends(Text,_super);function Text(text){_super.call(this,[]);this.text=text;this.type="text"}Text.prototype.parseImplementation=function(p){if(p.index>p.input.length-this.text.length)return failed;for(var i=0;i<this.text.length;++i)if(p.input[p.index+i]!==this.text[i])return failed;return p.index+this.text.length};Object.defineProperty(Text.prototype,"definition",{get:function(){return'"'+escapeChars(this.text)+'"'},enumerable:true,configurable:true});Text.prototype.cloneImplementation=function(){return new Text(this.text)};return Text}(Rule);Myna.Text=Text;var Delay=function(_super){__extends(Delay,_super);function Delay(fn){_super.call(this,[]);this.fn=fn;this.type="delay"}Delay.prototype.parseImplementation=function(p){return this.fn().parse(p)};Delay.prototype.cloneImplementation=function(){return new Delay(this.fn)};Object.defineProperty(Delay.prototype,"definition",{get:function(){return"delay("+this.fn()+")"},enumerable:true,configurable:true});return Delay}(Rule);Myna.Delay=Delay;var MatchRule=function(_super){__extends(MatchRule,_super);function MatchRule(){_super.apply(this,arguments)}MatchRule.prototype.parseImplementation=function(p){var oldP=p.clone();var result=this.match(p);p.copyFrom(oldP);return result?p.index:failed};return MatchRule}(Rule);Myna.MatchRule=MatchRule;var Not=function(_super){__extends(Not,_super);function Not(rule){_super.call(this,[rule]);this.type="not"}Not.prototype.match=function(p){return!this.firstChild.match(p)};Not.prototype.cloneImplementation=function(){return new Not(this.firstChild)};Object.defineProperty(Not.prototype,"definition",{get:function(){return"!"+this.firstChild.toString()},enumerable:true,configurable:true});return Not}(MatchRule);Myna.Not=Not;var At=function(_super){__extends(At,_super);function At(rule){_super.call(this,[rule]);this.type="at"}At.prototype.match=function(p){return this.firstChild.match(p)};At.prototype.cloneImplementation=function(){return new At(this.firstChild)};Object.defineProperty(At.prototype,"definition",{get:function(){return"&"+this.firstChild.toString()},enumerable:true,configurable:true});return At}(MatchRule);Myna.At=At;var Predicate=function(_super){__extends(Predicate,_super);function Predicate(fn){_super.call(this,[]);this.fn=fn;this.type="predicate"}Predicate.prototype.match=function(p){return this.fn(p)};Predicate.prototype.cloneImplementation=function(){return new Predicate(this.fn)};Object.defineProperty(Predicate.prototype,"definition",{get:function(){return"<predicate>"},enumerable:true,configurable:true});return Predicate}(MatchRule);Myna.Predicate=Predicate;var TruePredicate=function(_super){__extends(TruePredicate,_super);function TruePredicate(){_super.call(this,[]);this.type="true"}TruePredicate.prototype.match=function(p){return true};TruePredicate.prototype.cloneImplementation=function(){return new TruePredicate};Object.defineProperty(TruePredicate.prototype,"definition",{get:function(){return"<true>"},enumerable:true,configurable:true});return TruePredicate}(MatchRule);Myna.TruePredicate=TruePredicate;var AtEndPredicate=function(_super){__extends(AtEndPredicate,_super);function AtEndPredicate(){_super.call(this,[]);this.type="end"}AtEndPredicate.prototype.match=function(p){return!p.inRange};AtEndPredicate.prototype.cloneImplementation=function(){return new AtEndPredicate};Object.defineProperty(AtEndPredicate.prototype,"definition",{get:function(){return"<end>"},enumerable:true,configurable:true});return AtEndPredicate}(MatchRule);Myna.AtEndPredicate=AtEndPredicate;function text(text){return new Text(text)}Myna.text=text;function seq(){var rules=[];for(var _i=0;_i<arguments.length;_i++){rules[_i-0]=arguments[_i]}return new Sequence(rules.map(RuleTypeToRule))}Myna.seq=seq;function choice(){var rules=[];for(var _i=0;_i<arguments.length;_i++){rules[_i-0]=arguments[_i]}return new Choice(rules.map(RuleTypeToRule))}Myna.choice=choice;function delay(fxn){return new Delay(function(){return RuleTypeToRule(fxn())})}Myna.delay=delay;function not(rule){return new Not(RuleTypeToRule(rule))}Myna.not=not;function quantified(rule,min,max){if(min===void 0){min=0}if(max===void 0){max=Infinity}return new Quantified(RuleTypeToRule(rule),min,max)}Myna.quantified=quantified;function zeroOrMore(rule){return quantified(rule).setType("zeroOrMore")}Myna.zeroOrMore=zeroOrMore;function oneOrMore(rule){return quantified(rule,1).setType("oneOrMore")}Myna.oneOrMore=oneOrMore;function opt(rule){return quantified(rule,0,1).setType("opt")}Myna.opt=opt;function repeat(rule,count){return quantified(rule,count,count).setType("repeat")}Myna.repeat=repeat;function at(rule){return new At(RuleTypeToRule(rule))}Myna.at=at;function lookup(tokens,rule,onDefault){if(onDefault===void 0){onDefault=false}return new Lookup(tokensToDictionary(tokens,rule),RuleTypeToRule(onDefault))}Myna.lookup=lookup;function atChar(chars){return at(char(chars))}Myna.atChar=atChar;function notAtChar(chars){return not(char(chars))}Myna.notAtChar=notAtChar;function charExcept(chars){return notAtChar(chars).advance}Myna.charExcept=charExcept;function char(chars){return new CharSet(chars)}Myna.char=char;function range(min,max){return new CharRange(min,max)}Myna.range=range;function exceptRange(min,max){return range(min,max).not.then(Myna.advance)}Myna.exceptRange=exceptRange;function delimited(rule,delimiter){return opt(seq(rule,zeroOrMore(seq(delimiter,rule)))).setType("delimitedList")}Myna.delimited=delimited;function except(condition,rule){return seq(not(condition),rule).setType("except")}Myna.except=except;function repeatWhileNot(body,condition){return zeroOrMore(except(condition,body)).setType("whileNot")}Myna.repeatWhileNot=repeatWhileNot;function repeatUntilPast(body,condition){return seq(repeatWhileNot(body,condition),condition).setType("repeatUntilPast")}Myna.repeatUntilPast=repeatUntilPast;function advanceWhileNot(rule){return not(rule).advance.zeroOrMore.setType("advanceWhileNot")}Myna.advanceWhileNot=advanceWhileNot;function advanceUntilPast(rule){return seq(advanceWhileNot(rule),rule).setType("advanceUntilPast")}Myna.advanceUntilPast=advanceUntilPast;function advanceUnless(rule){return Myna.advance.butNot(rule).setType("advanceUnless")}Myna.advanceUnless=advanceUnless;function predicate(fn){return new Predicate(fn)}Myna.predicate=predicate;function action(fn){return predicate(function(p){fn(p);return true}).setType("action")}Myna.action=action;function log(msg){if(msg===void 0){msg=""}return action(function(p){console.log(msg)}).setType("log")}Myna.log=log;var ParseError=function(_super){__extends(ParseError,_super);function ParseError(parser,message){_super.call(this,message);this.parser=parser;this.message=message}return ParseError}(Error);Myna.ParseError=ParseError;function err(message){return action(function(p){throw new ParseError(p,message)}).setType("err")}Myna.err=err;function assert(rule){return choice(rule,action(function(p){throw new ParseError(p,"assertion failed, expected: "+RuleTypeToRule(rule))})).setType("assert")}Myna.assert=assert;function guardedSeq(condition){var rules=[];for(var _i=1;_i<arguments.length;_i++){rules[_i-1]=arguments[_i]}return seq(condition,seq.apply(void 0,rules.map(function(r){return assert(r)}))).setType("guardedSeq")}Myna.guardedSeq=guardedSeq;function doubleQuoted(rule){return guardedSeq('"',rule,'"').setType("doubleQuoted")}Myna.doubleQuoted=doubleQuoted;function singleQuoted(rule){return guardedSeq("'",rule,"'").setType("singleQuoted")}Myna.singleQuoted=singleQuoted;function join(sep){var xs=[];for(var _i=1;_i<arguments.length;_i++){xs[_i-1]=arguments[_i]}var r=[];for(var i=0;i<xs.length;++i){if(i>0)r.push(sep);r.push(xs[i])}return r}Myna.join=join;function keywordMap(){var rules=[];for(var _i=0;_i<arguments.length;_i++){rules[_i-0]=arguments[_i]}return rules.map(function(r){return typeof r=="string"?keyword(r):r})}Myna.keywordMap=keywordMap;function seqWs(){var rules=[];for(var _i=0;_i<arguments.length;_i++){rules[_i-0]=arguments[_i]}return seq.apply(void 0,join.apply(void 0,[Myna.ws].concat(rules)))}Myna.seqWs=seqWs;function parenthesized(rule){return guardedSeq("(",Myna.ws,rule,Myna.ws,")").setType("parenthesized")}Myna.parenthesized=parenthesized;function braced(rule){return guardedSeq("{",Myna.ws,rule,Myna.ws,"}").setType("braced")}Myna.braced=braced;function bracketed(rule){return guardedSeq("[",Myna.ws,rule,Myna.ws,"]").setType("bracketed")}Myna.bracketed=bracketed;function tagged(rule){return guardedSeq("<",Myna.ws,rule,Myna.ws,">").setType("tagged")}Myna.tagged=tagged;function keyword(text){return seq(text,not(Myna.identifierNext)).setType("keyword")}Myna.keyword=keyword;function keywords(){var words=[];for(var _i=0;_i<arguments.length;_i++){words[_i-0]=arguments[_i]}return choice.apply(void 0,words.map(keyword))}Myna.keywords=keywords;Myna.truePredicate=new TruePredicate;Myna.falsePredicate=Myna.truePredicate.not;Myna.end=new AtEndPredicate;Myna.notEnd=Myna.end.not;Myna.advance=new Advance;Myna.all=Myna.advance.zeroOrMore;Myna.letterLower=range("a","z");Myna.letterUpper=range("A","Z");Myna.letter=choice(Myna.letterLower,Myna.letterUpper);Myna.letters=Myna.letter.oneOrMore;Myna.digit=range("0","9");Myna.digits=Myna.digit.oneOrMore;Myna.digitNonZero=range("1","9");Myna.integer=choice("0",seq(Myna.digitNonZero,Myna.digit.zeroOrMore));Myna.hexDigit=choice(Myna.digit,range("a","f"),range("A","F"));Myna.binaryDigit=char("01");Myna.octalDigit=range("0","7");Myna.alphaNumeric=choice(Myna.letter,Myna.digit);Myna.underscore=text("_");Myna.identifierFirst=choice(Myna.letter,Myna.underscore);Myna.identifierNext=choice(Myna.alphaNumeric,Myna.underscore);Myna.identifier=seq(Myna.identifierFirst,Myna.identifierNext.zeroOrMore);Myna.hyphen=text("-");Myna.crlf=text("\r\n");Myna.newLine=choice(Myna.crlf,"\n");Myna.space=text(" ");Myna.tab=text("\t");Myna.ws=char(" \t\r\n \ufeff").zeroOrMore;Myna.wordChar=Myna.letter.or(char("-'"));Myna.word=Myna.letter.then(Myna.wordChar.zeroOrMore);function grammarAstRules(grammarName){return grammarRules(grammarName).filter(function(r){return r._createAstNode})}Myna.grammarAstRules=grammarAstRules;function grammarRules(grammarName){return allGrammarRules().filter(function(r){return r.grammarName==grammarName})}Myna.grammarRules=grammarRules;function allGrammarRules(){return Object.keys(Myna.allRules).sort().map(function(k){return Myna.allRules[k]})}Myna.allGrammarRules=allGrammarRules;function grammarNames(){return Object.keys(Myna.grammars).sort()}Myna.grammarNames=grammarNames;function grammarToString(grammarName){return grammarRules(grammarName).map(function(r){return r.fullName+" <- "+r.definition}).join("\n")}Myna.grammarToString=grammarToString;function astSchemaToString(grammarName){return grammarAstRules(grammarName).map(function(r){return r.name+" <- "+r.astRuleDefn}).join("\n")}Myna.astSchemaToString=astSchemaToString;function registerGrammar(grammarName,grammar){for(var k in grammar){if(grammar[k]instanceof Rule){var rule=grammar[k];rule.setName(grammarName,k);Myna.allRules[rule.fullName]=rule}}Myna.grammars[grammarName]=grammar;return grammar}Myna.registerGrammar=registerGrammar;function escapeChars(text){var r=JSON.stringify(text);return r.slice(1,r.length-1)}Myna.escapeChars=escapeChars;registerGrammar("core",Myna)})(Myna||(Myna={}));if(typeof module==="object"&&module.exports)module.exports=Myna;